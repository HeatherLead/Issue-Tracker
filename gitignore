[33mcommit fcfb2925ec99ab0917fb92e47c0d6aeba4308b4a[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m
Author: Ayush Bangar <143717997+HeatherLead@users.noreply.github.com>
Date:   Tue May 14 14:46:00 2024 +0530

    first commit

[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex fd3dbb5..879d3ba 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -27,6 +27,7 @@[m [myarn-error.log*[m
 [m
 # local env files[m
 .env*.local[m
[32m+[m[32m.env[m
 [m
 # vercel[m
 .vercel[m
[36m@@ -34,3 +35,6 @@[m [myarn-error.log*[m
 # typescript[m
 *.tsbuildinfo[m
 next-env.d.ts[m
[32m+[m
[32m+[m[32m# Sentry Config File[m
[32m+[m[32m.sentryclirc[m
[1mdiff --git a/app/IssueChart.tsx b/app/IssueChart.tsx[m
[1mnew file mode 100644[m
[1mindex 0000000..813c934[m
[1m--- /dev/null[m
[1m+++ b/app/IssueChart.tsx[m
[36m@@ -0,0 +1,33 @@[m
[32m+[m[32m"use client";[m
[32m+[m[32mimport { Card } from "@radix-ui/themes";[m
[32m+[m[32mimport React from "react";[m
[32m+[m[32mimport { ResponsiveContainer, BarChart, XAxis, YAxis, Bar } from "recharts";[m
[32m+[m[32minterface props {[m
[32m+[m[32m  Open: number;[m
[32m+[m[32m  InProgress: number;[m
[32m+[m[32m  Closed: number;[m
[32m+[m[32m}[m
[32m+[m[32mconst IssueChart = ({ Open, InProgress, Closed }: props) => {[m
[32m+[m[32m  const data = [[m
[32m+[m[32m    { label: "Open", value: Open },[m
[32m+[m[32m    { label: "In Progress", value: InProgress },[m
[32m+[m[32m    { label: "Closed", value: Closed },[m
[32m+[m[32m  ];[m
[32m+[m[32m  return ([m
[32m+[m[32m    <Card>[m
[32m+[m[32m      <ResponsiveContainer width="100%" height={300}>[m
[32m+[m[32m        <BarChart data={data}>[m
[32m+[m[32m          <XAxis dataKey="label" />[m
[32m+[m[32m          <YAxis />[m
[32m+[m[32m          <Bar[m
[32m+[m[32m            barSize={80}[m
[32m+[m[32m            style={{ fill: "var(--accent-9)" }}[m
[32m+[m[32m            dataKey="value"[m
[32m+[m[32m          />[m
[32m+[m[32m        </BarChart>[m
[32m+[m[32m      </ResponsiveContainer>[m
[32m+[m[32m    </Card>[m
[32m+[m[32m  );[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexport default IssueChart;[m
[1mdiff --git a/app/IssueSummary.tsx b/app/IssueSummary.tsx[m
[1mnew file mode 100644[m
[1mindex 0000000..cda353c[m
[1m--- /dev/null[m
[1m+++ b/app/IssueSummary.tsx[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32mimport { Status } from "@prisma/client";[m
[32m+[m[32mimport { Card, Flex, Text } from "@radix-ui/themes";[m
[32m+[m[32mimport Link from "next/link";[m
[32m+[m[32mimport React from "react";[m
[32m+[m[32minterface props {[m
[32m+[m[32m  Open: number;[m
[32m+[m[32m  InProgress: number;[m
[32m+[m[32m  Closed: number;[m
[32m+[m[32m}[m
[32m+[m[32mconst IssueSummary = ({ Open, InProgress, Closed }: props) => {[m
[32m+[m[32m  const containers: { label: string; value: number; status: Status }[] = [[m
[32m+[m[32m    { label: "Open Issues", value: Open, status: "OPEN" },[m
[32m+[m[32m    { label: "InProgress Issues", value: InProgress, status: "IN_PROGRESS" },[m
[32m+[m[32m    { label: "Closed Issues", value: Closed, status: "CLOSED" },[m
[32m+[m[32m  ];[m
[32m+[m[32m  return ([m
[32m+[m[32m    <Flex gap="5">[m
[32m+[m[32m      {containers.map((container) => ([m
[32m+[m[32m        <Card key={container.label}>[m
[32m+[m[32m          <Flex direction="column" gap="1">[m
[32m+[m[32m            <Link[m
[32m+[m[32m              className=" text-sm font-medium"[m
[32m+[m[32m              href={`/issues/list?status=${container.status}`}[m
[32m+[m[32m            >[m
[32m+[m[32m              {container.label}[m
[32m+[m[32m            </Link>[m
[32m+[m[32m            <Text size="5" className=" font-bold">[m
[32m+[m[32m              {container.value}[m
[32m+[m[32m            </Text>[m
[32m+[m[32m          </Flex>[m
[32m+[m[32m        </Card>[m
[32m+[m[32m      ))}[m
[32m+[m[32m    </Flex>[m
[32m+[m[32m  );[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexport default IssueSummary;[m
[1mdiff --git a/app/LatestIssue.tsx b/app/LatestIssue.tsx[m
[1mnew file mode 100644[m
[1mindex 0000000..f32cb58[m
[1m--- /dev/null[m
[1m+++ b/app/LatestIssue.tsx[m
[36m@@ -0,0 +1,45 @@[m
[32m+[m[32mimport prisma from "@/prisma/client";[m
[32m+[m[32mimport { Table, Flex, Text, Avatar, Card, Heading } from "@radix-ui/themes";[m
[32m+[m[32mimport Link from "next/link";[m
[32m+[m[32mimport React from "react";[m
[32m+[m[32mimport IssueStatusBadge from "./components/IssueStatusBadge";[m
[32m+[m
[32m+[m[32mconst LatestIssue = async () => {[m
[32m+[m[32m  const issues = await prisma.issue.findMany({[m
[32m+[m[32m    orderBy: { createdAt: "desc" },[m
[32m+[m[32m    take: 5,[m
[32m+[m[32m    include: { assignedToUser: true },[m
[32m+[m[32m  });[m
[32m+[m[32m  return ([m
[32m+[m[32m    <Card>[m
[32m+[m[32m      <Heading ml="3">Latest Issues</Heading>[m
[32m+[m[32m      <Table.Root>[m
[32m+[m[32m        <Table.Body>[m
[32m+[m[32m          {issues.map((issue) => ([m
[32m+[m[32m            <Table.Row key={issue.id}>[m
[32m+[m[32m              <Table.Cell>[m
[32m+[m[32m                <Flex justify="between">[m
[32m+[m[32m                  <Flex direction="column" align="start" gap="2">[m
[32m+[m[32m                    <Link href={`/issues/${issue.id}`}>{issue.title}</Link>[m
[32m+[m[32m                    <IssueStatusBadge status={issue.status} />[m
[32m+[m[32m                  </Flex>[m
[32m+[m[32m                  <Flex>[m
[32m+[m[32m                    {issue.assignedToUser && ([m
[32m+[m[32m                      <Avatar[m
[32m+[m[32m                        src={issue.assignedToUser.image!}[m
[32m+[m[32m                        radius="full"[m
[32m+[m[32m                        fallback="?"[m
[32m+[m[32m                      />[m
[32m+[m[32m                    )}[m
[32m+[m[32m                  </Flex>[m
[32m+[m[32m                </Flex>[m
[32m+[m[32m              </Table.Cell>[m
[32m+[m[32m            </Table.Row>[m
[32m+[m[32m          ))}[m
[32m+[m[32m        </Table.Body>[m
[32m+[m[32m      </Table.Root>[m
[32m+[m[32m    </Card>[m
[32m+[m[32m  );[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexport default LatestIssue;[m
[1mdiff --git a/app/api/sentry-example-api/route.js b/app/api/sentry-example-api/route.js[m
[1mnew file mode 100644[m
[1mindex 0000000..f486f3d[m
[1m--- /dev/null[m
[1m+++ b/app/api/sentry-example-api/route.js[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32mimport { NextResponse } from "next/server";[m
[32m+[m
[32m+[m[32mexport const dynamic = "force-dynamic";[m
[32m+[m
[32m+[m[32m// A faulty API route to test Sentry's error monitoring[m
[32m+[m[32mexport function GET() {[m
[32m+[m[32m  throw new Error("Sentry Example API Route Error");[m
[32m+[m[32m  return NextResponse.json({ data: "Testing Sentry Error..." });[m
[32m+[m[32m}[m
[1mdiff --git a/app/components/Pagination.tsx b/app/components/Pagination.tsx[m
[1mnew file mode 100644[m
[1mindex 0000000..681d01f[m
[1m--- /dev/null[m
[1m+++ b/app/components/Pagination.tsx[m
[36m@@ -0,0 +1,68 @@[m
[32m+[m[32m"use client";[m
[32m+[m[32mimport {[m
[32m+[m[32m  ChevronLeftIcon,[m
[32m+[m[32m  ChevronRightIcon,[m
[32m+[m[32m  DoubleArrowLeftIcon,[m
[32m+[m[32m  DoubleArrowRightIcon,[m
[32m+[m[32m} from "@radix-ui/react-icons";[m
[32m+[m[32mimport { Button, Flex, Text } from "@radix-ui/themes";[m
[32m+[m[32mimport { useSearchParams } from "next/navigation";[m
[32m+[m[32mimport { useRouter } from "next/navigation";[m
[32m+[m[32mimport React from "react";[m
[32m+[m[32minterface props {[m
[32m+[m[32m  itemCount: number;[m
[32m+[m[32m  pageSize: number;[m
[32m+[m[32m  currentPage: number;[m
[32m+[m[32m}[m
[32m+[m[32mconst Pagination = ({ itemCount, pageSize, currentPage }: props) => {